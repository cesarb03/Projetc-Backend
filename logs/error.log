{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T01:01:04.620Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:34:58.025Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:50:26.094Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:52:59.083Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:53:51.375Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:54:03.775Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:54:25.982Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:54:48.487Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T15:57:02.434Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:00:50.101Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:01:26.572Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:01:44.701Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:02:16.417Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:02:29.879Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:02:43.696Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:02:57.245Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:03:11.392Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:03:33.043Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:07:23.068Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-10-14T16:09:07.802Z'
}
{
  message: 'An error has occurred when sending the user registration email: cesar_b_03@outlook.com',
  level: 'error',
  timestamp: '2022-10-14T18:21:05.435Z'
}
{
  message: 'An error has occurred when sendinding a Whatsapp message',
  level: 'error',
  timestamp: '2022-10-14T18:21:06.531Z'
}
{
  message: 'An error has occurred when sending a SMS: cesar_b_03@outlook.com',
  level: 'error',
  timestamp: '2022-10-14T18:21:06.538Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:16:31.854Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:16:31.859Z'
}
{
  message: 'Error in getById method: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:16:31.899Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:21:32.816Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:21:32.820Z'
}
{
  message: 'Error in getById method: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:21:32.835Z'
}
{
  message: 'Error in getById method: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:22:57.847Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:22:57.851Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:22:57.854Z'
}
{
  message: 'Error in getById method: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:27:26.154Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:27:26.173Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:27:26.180Z'
}
{
  message: 'Error in getById method: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:28:09.706Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:28:09.740Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:28:09.747Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:31:34.136Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:31:34.141Z'
}
{
  message: 'Error in getById method: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:31:34.153Z'
}
{
  message: 'Error in getById method: CastError: Cast to ObjectId failed for value "NaN" (type number) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-18T19:31:53.068Z'
}
{
  message: 'An error has ocurred when starting: Error: listen EADDRINUSE: address already in use :::8080',
  level: 'error',
  timestamp: '2022-10-19T15:12:22.092Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "633128b09388267afe27bb8" (type string) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-19T20:40:56.535Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "633128b09388267afe27bb8" (type string) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-19T20:40:56.538Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "633128b09388267afe27bb8" (type string) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-19T20:42:10.423Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "633128b09388267afe27bb8" (type string) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-19T20:42:10.426Z'
}
{
  message: 'MongoAtlas updateProductById method error: CastError: Cast to ObjectId failed for value "63323e2d78d8ebad08060f" (type string) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-19T20:51:31.781Z'
}
{
  message: 'MongoAtlas deleteProductById method error: CastError: Cast to ObjectId failed for value "63323e2d78d8ebad08060f" (type string) at path "_id" for model "products"',
  level: 'error',
  timestamp: '2022-10-19T20:51:31.796Z'
}
{
  message: 'Error in addProduct method: ValidationError: name: Path `name` is required., photoURL: Path `photoURL` (`djfh`) is shorter than the minimum allowed length (8).',
  level: 'error',
  timestamp: '2022-10-19T21:59:11.072Z'
}
{
  message: 'Error in addProduct method: ValidationError: name: Path `name` is required., photoURL: Path `photoURL` (`djfh`) is shorter than the minimum allowed length (8).',
  level: 'error',
  timestamp: '2022-10-19T22:00:43.496Z'
}
{
  message: 'Error in addProduct method: ValidationError: name: Path `name` is required., photoURL: Path `photoURL` (`"djfh"`) is shorter than the minimum allowed length (8).',
  level: 'error',
  timestamp: '2022-10-19T22:01:14.692Z'
}
{
  message: 'Error in addProduct method: ValidationError: name: Path `name` is required.',
  level: 'error',
  timestamp: '2022-10-19T22:03:04.165Z'
}
{
  message: 'Error in addProduct method: ValidationError: photoURL: Path `photoURL` is required.',
  level: 'error',
  timestamp: '2022-10-19T22:06:19.575Z'
}
{
  message: 'Error in addProduct method: ValidationError: photoURL: Path `photoURL` is required.',
  level: 'error',
  timestamp: '2022-10-19T22:23:10.090Z'
}
{
  message: 'Error in addProduct method: ValidationError: photoURL: Path `photoURL` is required., price: Path `price` is required., name: Path `name` is required.',
  level: 'error',
  timestamp: '2022-10-20T15:35:47.062Z'
}
{
  message: 'Error in addProduct method: ValidationError: photoURL: Path `photoURL` is required., price: Path `price` is required., name: Path `name` is required.',
  level: 'error',
  timestamp: '2022-10-20T15:39:09.960Z'
}
{
  message: 'Error in addProduct method: ValidationError: photoURL: Path `photoURL` is required.',
  level: 'error',
  timestamp: '2022-10-20T15:41:06.529Z'
}
{
  message: 'Error in addProduct method: ValidationError: photoURL: Path `photoURL` is required.',
  level: 'error',
  timestamp: '2022-10-21T18:56:51.696Z'
}
{ level: 'error', timestamp: '2022-11-03T13:59:26.749Z' }
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    'user.id': ValidatorError: Path `user.id` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.id` is required.',
        type: 'required',
        path: 'user.id',
        value: undefined
      },
      kind: 'required',
      path: 'user.id',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T15:04:48.022Z'
}
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    'user.id': ValidatorError: Path `user.id` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.id` is required.',
        type: 'required',
        path: 'user.id',
        value: undefined
      },
      kind: 'required',
      path: 'user.id',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T15:30:07.718Z'
}
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    'user.id': ValidatorError: Path `user.id` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.id` is required.',
        type: 'required',
        path: 'user.id',
        value: undefined
      },
      kind: 'required',
      path: 'user.id',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T15:39:29.869Z'
}
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T15:49:17.623Z'
}
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T16:03:28.024Z'
}
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T16:05:22.962Z'
}
{ level: 'error', timestamp: '2022-11-03T16:47:23.192Z' }
{ level: 'error', timestamp: '2022-11-03T16:48:56.741Z' }
{ level: 'error', timestamp: '2022-11-03T16:56:20.770Z' }
{
  errors: {
    user: CastError: Cast to string failed for value "{ id: '6363fcc5cde2bb5ceb36d346', email: 'cesar_b_03@outlook.com' }" (type Object) at path "user"
        at SchemaString.cast (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schema\string.js:603:11)
        at SchemaString.SchemaType.applySetters (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1201:12)
        at model.$set (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:1368:22)
        at model.$set (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:1093:16)
        at model.Document (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:166:12)
        at model.Model (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\model.js:121:12)
        at new model (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\model.js:5020:15)
        at CartMongoDAO.<anonymous> (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\src\persistence\DAOs\cart\mongoDbCloud.ts:17:18)
        at Generator.next (<anonymous>)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\src\persistence\DAOs\cart\mongoDbCloud.ts:8:71 {
      stringValue: `"{ id: '6363fcc5cde2bb5ceb36d346', email: 'cesar_b_03@outlook.com' }"`,
      messageFormat: undefined,
      kind: 'string',
      value: {
        id: '6363fcc5cde2bb5ceb36d346',
        email: 'cesar_b_03@outlook.com'
      },
      path: 'user',
      reason: null,
      valueType: 'Object'
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T17:39:17.933Z'
}
{ level: 'error', timestamp: '2022-11-03T17:41:39.852Z' }
{ level: 'error', timestamp: '2022-11-03T17:49:57.672Z' }
{ level: 'error', timestamp: '2022-11-03T18:14:23.373Z' }
{ level: 'error', timestamp: '2022-11-03T18:30:35.654Z' }
{ level: 'error', timestamp: '2022-11-03T19:38:43.013Z' }
{ level: 'error', timestamp: '2022-11-03T19:41:11.901Z' }
{ level: 'error', timestamp: '2022-11-03T19:42:56.933Z' }
{ level: 'error', timestamp: '2022-11-03T19:44:51.542Z' }
{ level: 'error', timestamp: '2022-11-03T20:06:46.959Z' }
{
  messageFormat: undefined,
  stringValue: `"{ product: '6355b12e7fe1b31814ce971e' }"`,
  kind: 'ObjectId',
  value: { product: '6355b12e7fe1b31814ce971e' },
  path: '_id',
  reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new BSONTypeError (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\error.ts:16:5)
      at new ObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1201:12)
      at ObjectId.SchemaType._castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1648:15)
      at ObjectId.SchemaType.castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1636:15)
      at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1574:18
      at Array.map (<anonymous>)
      at ObjectId.handle$in (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1570:14),
  valueType: 'Object',
  level: 'error',
  timestamp: '2022-11-03T20:46:35.195Z'
}
{
  messageFormat: undefined,
  stringValue: `"{ product: '6355b12e7fe1b31814ce971e' }"`,
  kind: 'ObjectId',
  value: { product: '6355b12e7fe1b31814ce971e' },
  path: '_id',
  reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new BSONTypeError (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\error.ts:16:5)
      at new ObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1201:12)
      at ObjectId.SchemaType._castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1648:15)
      at ObjectId.SchemaType.castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1636:15)
      at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1574:18
      at Array.map (<anonymous>)
      at ObjectId.handle$in (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1570:14),
  valueType: 'Object',
  level: 'error',
  timestamp: '2022-11-03T20:47:11.438Z'
}
{
  messageFormat: undefined,
  stringValue: `"{ product: '6355b12e7fe1b31814ce971e' }"`,
  kind: 'ObjectId',
  value: { product: '6355b12e7fe1b31814ce971e' },
  path: '_id',
  reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new BSONTypeError (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\error.ts:16:5)
      at new ObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1201:12)
      at ObjectId.SchemaType._castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1648:15)
      at ObjectId.SchemaType.castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1636:15)
      at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1574:18
      at Array.map (<anonymous>)
      at ObjectId.handle$in (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1570:14),
  valueType: 'Object',
  level: 'error',
  timestamp: '2022-11-03T20:47:59.291Z'
}
{
  messageFormat: undefined,
  stringValue: `"{ product: '6355b12e7fe1b31814ce971e' }"`,
  kind: 'ObjectId',
  value: { product: '6355b12e7fe1b31814ce971e' },
  path: '_id',
  reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new BSONTypeError (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\error.ts:16:5)
      at new ObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1201:12)
      at ObjectId.SchemaType._castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1648:15)
      at ObjectId.SchemaType.castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1636:15)
      at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1574:18
      at Array.map (<anonymous>)
      at ObjectId.handle$in (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1570:14),
  valueType: 'Object',
  level: 'error',
  timestamp: '2022-11-03T20:49:30.809Z'
}
{
  messageFormat: undefined,
  stringValue: `"{ product: '6355b12e7fe1b31814ce971e' }"`,
  kind: 'ObjectId',
  value: { product: '6355b12e7fe1b31814ce971e' },
  path: '_id',
  reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new BSONTypeError (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\error.ts:16:5)
      at new ObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1201:12)
      at ObjectId.SchemaType._castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1648:15)
      at ObjectId.SchemaType.castForQuery (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1636:15)
      at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1574:18
      at Array.map (<anonymous>)
      at ObjectId.handle$in (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1570:14),
  valueType: 'Object',
  level: 'error',
  timestamp: '2022-11-03T20:49:48.148Z'
}
{ level: 'error', timestamp: '2022-11-03T20:53:16.242Z' }
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    'user.id': ValidatorError: Path `user.id` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.id` is required.',
        type: 'required',
        path: 'user.id',
        value: undefined
      },
      kind: 'required',
      path: 'user.id',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T21:09:18.083Z'
}
{
  errors: {
    'user.email': ValidatorError: Path `user.email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.email` is required.',
        type: 'required',
        path: 'user.email',
        value: undefined
      },
      kind: 'required',
      path: 'user.email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    'user.id': ValidatorError: Path `user.id` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user.id` is required.',
        type: 'required',
        path: 'user.id',
        value: undefined
      },
      kind: 'required',
      path: 'user.id',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-03T21:31:03.032Z'
}
{
  errors: {
    user_email: ValidatorError: Path `user_email` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user_email` is required.',
        type: 'required',
        path: 'user_email',
        value: undefined
      },
      kind: 'required',
      path: 'user_email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    user_id: ValidatorError: Path `user_id` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `user_id` is required.',
        type: 'required',
        path: 'user_id',
        value: undefined
      },
      kind: 'required',
      path: 'user_id',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'carts validation failed',
  level: 'error',
  timestamp: '2022-11-04T03:46:56.823Z'
}
{
  message: 'Error in createNewCart method: TypeError: res.status is not a function',
  level: 'error',
  timestamp: '2022-11-04T14:17:26.007Z'
}
{
  message: 'Error in createNewCart method: TypeError: res.status is not a function',
  level: 'error',
  timestamp: '2022-11-04T14:20:30.687Z'
}
{
  errors: {
    name: ValidatorError: Path `name` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `name` is required.',
        type: 'required',
        path: 'name',
        value: undefined
      },
      kind: 'required',
      path: 'name',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    address: ValidatorError: Path `address` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaString.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `address` is required.',
        type: 'required',
        path: 'address',
        value: undefined
      },
      kind: 'required',
      path: 'address',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    age: ValidatorError: Path `age` is required.
        at validate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1346:13)
        at SchemaNumber.SchemaType.doValidate (C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\schematype.js:1330:7)
        at C:\Users\Cesar\Downloads\BackEnd Dev\Projetc - Backend\node_modules\mongoose\lib\document.js:2835:18
        at processTicksAndRejections (node:internal/process/task_queues:78:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `age` is required.',
        type: 'required',
        path: 'age',
        value: undefined
      },
      kind: 'required',
      path: 'age',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'User validation failed',
  level: 'error',
  timestamp: '2022-11-08T15:54:20.148Z'
}
{
  message: 'Error in createNewCart method: TypeError: res.status is not a function',
  level: 'error',
  timestamp: '2022-11-08T15:55:48.104Z'
}
{
  message: 'Error in addProductsById method: CastError: Cast to number failed for value "undefined" (type undefined) at path "quantity"',
  level: 'error',
  timestamp: '2022-11-08T15:57:57.401Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:01:40.075Z'
}
{ level: 'error', timestamp: '2022-11-11T05:01:40.481Z' }
{ level: 'error', timestamp: '2022-11-11T05:01:40.481Z' }
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:02:22.014Z'
}
{ level: 'error', timestamp: '2022-11-11T05:02:22.582Z' }
{ level: 'error', timestamp: '2022-11-11T05:02:22.582Z' }
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:02:56.444Z'
}
{ level: 'error', timestamp: '2022-11-11T05:02:56.870Z' }
{ level: 'error', timestamp: '2022-11-11T05:02:56.870Z' }
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:05:11.351Z'
}
{ level: 'error', timestamp: '2022-11-11T05:05:11.782Z' }
{ level: 'error', timestamp: '2022-11-11T05:05:11.783Z' }
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:05:52.730Z'
}
{ level: 'error', timestamp: '2022-11-11T05:05:53.173Z' }
{ level: 'error', timestamp: '2022-11-11T05:05:53.174Z' }
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:08:07.338Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:09:50.616Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:13:04.786Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:14:30.293Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:15:17.887Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T05:16:50.801Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T06:10:40.144Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T06:14:21.185Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T06:14:50.649Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T06:16:06.432Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T06:17:54.540Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T06:19:47.123Z'
}
{
  message: 'Persistence type not found Error: Persistence not found',
  level: 'error',
  timestamp: '2022-11-11T06:20:30.514Z'
}
